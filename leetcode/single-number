//Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

//Follow up: Could you implement a solution with a linear runtime complexity and without using extra memory?

class Solution {
public:
    int singleNumber(std::vector<int>& nums) {
        int single = nums[0];
        for (int ix = 1; ix < nums.size(); ++ix) {
            single ^= nums[ix];
        }
        return single;
    }
};
