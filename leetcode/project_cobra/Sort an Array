Given an array of integers nums, sort the array in ascending order.

class Solution {
public:
    void  MergeVector(std::vector<int> & arr, int l, int m, int r){
	std::vector<int> left;
	std::vector<int> right;
	for (int i = l; i <= m; ++i) {
		left.push_back(arr[i]);
	}
	for (int i = m +1; i <= r; ++i) {
		right.push_back(arr[i]);
	}
	int i = 0, j = 0;
	while  (i <= m - l&& j  < r-m) {
		if (left[i] < right[j]) {
			arr[l + i + j] = left[i];
			++i;
		}
		else {
			arr[l +  i + j] = right[j];
			++j;
		}
	}
	while (j < r-m) {
		arr[l + i + j] = right[j];
		++j;
	}
	while (i + l <= m) {
		arr[l + i + j] = left[i];
		++i;
	}
}

void  MergeSortVector(std::vector<int> & arr, int l, int r) {
	if (l >=r) {
		return;
	}
	else {
		int m =(r + l) / 2;
		MergeSortVector(arr, l, m);
		MergeSortVector(arr, m + 1, r);
		MergeVector(arr, l, m, r);;
	}
}
    vector<int> sortArray(std::vector<int>& nums) {
        MergeSortVector(nums, 0, nums.size()-1);  
        return nums;
    }
};
