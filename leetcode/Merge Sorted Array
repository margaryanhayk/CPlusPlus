//Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.
//The number of elements initialized in nums1 and nums2 are m and n respectively. 
//You may assume that nums1 has a size equal to m + n such that it has enough space to hold additional elements from nums2.

class Solution {
public:
	void merge(std::vector<int>& nums1, int m, std::vector<int>& nums2, int n) {
		std::vector<int> arr;
		for (int i = 0; i < m; ++i) {
			arr.push_back(nums1[i]);
		}
		for (int i = 0; i < n; ++i) {
			arr.push_back(nums2[i]);
		}

		int i = 0, j = 0;
		while (i < m  && j < n) {
			if (nums1[i] < nums2[j]) {
				arr[i + j] = nums1[i];
				++i;
			}
			else {
				arr[i + j] = nums2[j];
				++j;
			}
		}
		while (j < n) {
			arr[i + j] = nums2[j];
			++j;
		}
		while (i  < m) {
			arr[i + j] = nums1[i];
			++i;
		}
		nums1 = arr;
	}
};
